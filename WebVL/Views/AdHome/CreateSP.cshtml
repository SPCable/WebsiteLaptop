@model WebVL.Models.Product

@{
    WebVL.Context.ProductContext db = new WebVL.Context.ProductContext();
    var a = db.Categories;
    ViewBag.Title = "CreateSP";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}


@using (Html.BeginForm("CreateSP", "AdHome", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    <div class="app-page-title">
        <div class="page-title-wrapper">
            <div class="page-title-heading">

                <h3>Sản Phẩm</h3>
            </div>

        </div>
    </div>
    <div class="main-card mb-3 card">

        <div class="card-body">


            <h5 class="card-title">Thêm Sản Phẩm</h5>

            <form class="needs-validation" novalidate>



                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    <h4>Product</h4>
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductId, "Mã sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.ProductId, new { htmlAttributes = new { @class = "form-control" } })
                            <a style="color:red">@ViewBag.ThongbaoProductId</a>
                            <a style="color:red">@ViewBag.checkIDProduct</a>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.productName, "Tên sản phẩm", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })
                            <a style="color:red">@ViewBag.ThongbaoProductName</a>

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Cpu, "CPU", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.Cpu, new { htmlAttributes = new { @class = "form-control" } })
                            <a style="color:red">@ViewBag.ThongbaoCPU</a>

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.OpSys, "OS", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.OpSys, new { htmlAttributes = new { @class = "form-control" } })
                            <a style="color:red">@ViewBag.ThongbaoOS</a>

                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.productPrice, "Giá", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.productPrice, new { htmlAttributes = new { @class = "form-control" } })
                            <a style="color:red">@ViewBag.ThongbaoProductPrice</a>
                            @Html.ValidationMessageFor(model => model.productPrice, "Phải nhập thông tin này", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.productDiscout, "Giảm giá", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.productDiscout, new { htmlAttributes = new { @class = "form-control" } })

                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.productAmount, "Số lượng", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.EditorFor(model => model.productAmount, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.productPrice, "Phải nhập thông tin này", new { @class = "text-danger" })
                            <a style="color:red">@ViewBag.ThongbaoProductAmount</a>
                        </div>
                    </div>



                    <div class="form-group">
                        @Html.LabelFor(model => model.productDesc, "Mô tả", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">

                            <textarea name="productDesc"></textarea>
                            @Html.ValidationMessageFor(model => model.productDesc, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.productImg, "Ảnh 0", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" accept="image/*" name="fileUpload0" />
                            <a style="color:red">@ViewBag.Thongbao</a>
                            <a style="color:red">@ViewBag.Thongbao0</a>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.productImg1, "Ảnh 1", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" accept="image/*" name="fileUpload1" />
                            <a style="color:red">@ViewBag.Thongbao</a>
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.productImg2, "Ảnh 2", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" accept="image/*" name="fileUpload2" />
                            <a style="color:red">@ViewBag.Thongbao</a>
                            @Html.ValidationMessageFor(model => model.productImg2, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.productImg3, "Ảnh 3", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" accept="image/*" name="fileUpload3" />
                            <a style="color:red">@ViewBag.Thongbao</a>
                            @Html.ValidationMessageFor(model => model.productImg3, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, "Thương hiệu", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-4 mb-3">
                            @Html.DropDownListFor(model => model.CategoryId, new SelectList(a.ToList(), "categoryId", "CategoryName"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" value="" id="invalidCheck">
                            <label class="form-check-label" for="invalidCheck">
                                Ẩn danh sách
                            </label>

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-10 col-md-2">
                            <input type="submit" value="Lưu" class="btn btn-primary" />
                            <a class="btn btn-danger pull-right" style="color:white" href="@Url.Action("Index","AdHome")">Hủy</a>
                        </div>
                    </div>


                </div>
                        
            </form>

            <script>
                // Example starter JavaScript for disabling form submissions if there are invalid fields
                (function () {
                    'use strict';
                    window.addEventListener('load', function () {
                        // Fetch all the forms we want to apply custom Bootstrap validation styles to
                        var forms = document.getElementsByClassName('needs-validation');
                        // Loop over them and prevent submission
                        var validation = Array.prototype.filter.call(forms, function (form) {
                            form.addEventListener('submit', function (event) {
                                if (form.checkValidity() === false) {
                                    event.preventDefault();
                                    event.stopPropagation();
                                }
                                form.classList.add('was-validated');
                            }, false);
                        });
                    }, false);
                })();
            </script>
        </div>
    </div>
}